{"ast":null,"code":"import _toConsumableArray from \"/Users/christopherchow/Desktop/Coding_Bootcamp/Week_23/Day2/pets-app-oct-11-18-9-36-pm/client/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/christopherchow/Desktop/Coding_Bootcamp/Week_23/Day2/pets-app-oct-11-18-9-36-pm/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/christopherchow/Desktop/Coding_Bootcamp/Week_23/Day2/pets-app-oct-11-18-9-36-pm/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/christopherchow/Desktop/Coding_Bootcamp/Week_23/Day2/pets-app-oct-11-18-9-36-pm/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/christopherchow/Desktop/Coding_Bootcamp/Week_23/Day2/pets-app-oct-11-18-9-36-pm/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/christopherchow/Desktop/Coding_Bootcamp/Week_23/Day2/pets-app-oct-11-18-9-36-pm/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/christopherchow/Desktop/Coding_Bootcamp/Week_23/Day2/pets-app-oct-11-18-9-36-pm/client/src/App.js\";\nimport React, { Component } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this));\n\n    _this.deletePet = function (event) {\n      //in button below add a data attribute with the pet's id\n      var id = event.target.getAttribute('data-id');\n      return fetch(\"http://localhost:3001/pets/\".concat(id), {\n        method: \"POST\",\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        }\n      }).then(function (res) {\n        return res.json();\n      }).then(function (deletedPetId) {\n        var pets = _this.state.pets.filter(function (pet) {\n          return pet._id !== deletedPetId;\n        });\n\n        _this.setState({\n          pets: pets\n        });\n      }); //and in deletePet, write the fetch call to delete the Pet\n      //so you click a button, you refresh and it's gone\n      //12:05\n    };\n\n    _this.createPet = function (event) {\n      event.preventDefault();\n      var name = event.target.children[0].value;\n      var type = event.target.children[1].value;\n      return fetch(\"http://localhost:3001/pets\", {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name: name,\n          type: type\n        })\n      }).then(function (res) {\n        return res.json();\n      }).then(function (rj) {\n        var pets = _toConsumableArray(_this.state.pets).concat([rj]);\n\n        _this.setState({\n          pets: pets\n        });\n      });\n    };\n\n    _this.updatePet = function (event) {\n      event.preventDefault();\n      var form = event.target;\n      var updatedId = _this.state.edit_id;\n      var name = form.children[0].value;\n      var type = form.children[1].value;\n      return fetch(\"http://localhost:3001/pets/update/\".concat(updatedId), {\n        method: \"POST\",\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name: name,\n          type: type\n        })\n      }).then(function (res) {\n        return res.json();\n      }).then(function (updatedPet) {\n        var pets = _this.state.pets.map(function (oldPet) {\n          //if the pet in this.state.pets is not the pet we updated then leave it alone\n          if (oldPet._id != updatedId) return oldPet;else return updatedPet;\n        });\n\n        _this.setState({\n          pets: pets\n        });\n      });\n    };\n\n    _this.editPet = function (event) {\n      event.preventDefault();\n      var name = event.target.getAttribute('data-name');\n      var type = event.target.getAttribute('data-type');\n\n      _this.setState({\n        edit_id: event.target.getAttribute('data-id')\n      }, function () {\n        var form = document.querySelector('#editForm');\n        form.children[0].value = name;\n        form.children[1].value = type;\n      });\n    };\n\n    _this.state = {\n      pets: [{\n        _id: 1,\n        name: 'fido'\n      }, {\n        _id: 2,\n        name: 'snowflake'\n      }],\n      name: 'will',\n      edit_id: '' // this.editPet = this.editPet.bind(this);\n\n    };\n    return _this;\n  } // deletePet() {\n  //   alert('hi');\n  // }\n\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      return fetch(\"http://localhost:3001/pets\").then(function (res) {\n        return res.json();\n      }).then(function (resultingJSON) {\n        return _this2.setState({\n          pets: resultingJSON\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, React.createElement(\"header\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: logo,\n        className: \"App-logo\",\n        alt: \"logo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, \"Edit \", React.createElement(\"code\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, \"src/App.js\"), \" and save to reload. \", this.state.edit_id), React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, this.state.name), React.createElement(\"form\", {\n        onSubmit: this.createPet,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        name: \"pet\",\n        placeholder: \"put in a pet name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"text\",\n        name: \"type\",\n        placeholder: \"put in a type\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, \"make pet\")), this.state.edit_id != \"\" && React.createElement(\"form\", {\n        id: \"editForm\",\n        onSubmit: this.updatePet,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        name: \"pet\",\n        placeholder: \"put in a pet name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"text\",\n        name: \"type\",\n        placeholder: \"put in a type\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, \"update pet\")), this.state.pets.map(function (x) {\n        return React.createElement(\"p\", {\n          key: x._id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 149\n          },\n          __self: this\n        }, x.name, \" | \", x.type, \" \", React.createElement(\"button\", {\n          onClick: _this3.deletePet,\n          \"data-id\": x._id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 150\n          },\n          __self: this\n        }, \"x\"), \"| \", React.createElement(\"a\", {\n          onClick: _this3.editPet,\n          href: \"#\",\n          \"data-id\": x._id,\n          \"data-name\": x.name,\n          \"data-type\": x.type,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 151\n          },\n          __self: this\n        }, \"edit\"));\n      }), React.createElement(\"a\", {\n        className: \"App-link\",\n        href: \"https://reactjs.org\",\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, \"Learn React\")));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/christopherchow/Desktop/Coding_Bootcamp/Week_23/Day2/pets-app-oct-11-18-9-36-pm/client/src/App.js"],"names":["React","Component","App","deletePet","event","id","target","getAttribute","fetch","method","headers","then","res","json","deletedPetId","pets","state","filter","pet","_id","setState","createPet","preventDefault","name","children","value","type","body","JSON","stringify","rj","updatePet","form","updatedId","edit_id","updatedPet","map","oldPet","editPet","document","querySelector","resultingJSON","logo","x"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      pets : [{_id: 1, name: 'fido'}, {_id: 2, name: 'snowflake'}],\n      name : 'will',\n      edit_id : ''\n    }\n\n    // this.editPet = this.editPet.bind(this);\n  }\n\n  // deletePet() {\n  //   alert('hi');\n  // }\n\n  deletePet = (event) => {\n\n    //in button below add a data attribute with the pet's id\n\n    var id = event.target.getAttribute('data-id');\n\n    return fetch(`http://localhost:3001/pets/${id}`, {\n            method: \"POST\",\n            headers: {\n              'Accept': 'application/json',\n              'Content-Type': 'application/json'\n            }\n          }).then(res => res.json()).then(deletedPetId => {\n\n            let pets = this.state.pets.filter(pet => pet._id !== deletedPetId)\n\n            this.setState({pets})\n          })\n\n    //and in deletePet, write the fetch call to delete the Pet\n\n\n    //so you click a button, you refresh and it's gone\n\n    //12:05\n  }\n\n  createPet = (event) => {\n    event.preventDefault();\n\n    let name = event.target.children[0].value;\n    let type = event.target.children[1].value;\n\n    return fetch(\"http://localhost:3001/pets\", {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({name, type})\n      }).then(res => res.json()).then(rj => {\n        let pets = [...this.state.pets, rj];\n        this.setState({pets})\n      })\n  }\n\n  updatePet = (event) => {\n    event.preventDefault();\n\n    let form = event.target;\n\n    let updatedId = this.state.edit_id;\n    let name = form.children[0].value;\n    let type = form.children[1].value;\n\n    return fetch(`http://localhost:3001/pets/update/${updatedId}`, {\n      method: \"POST\",\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({name, type})\n    }).then(res => res.json()).then(updatedPet => {\n\n      let pets = this.state.pets.map(oldPet => {\n        //if the pet in this.state.pets is not the pet we updated then leave it alone\n        if (oldPet._id != updatedId) return oldPet;\n        else return updatedPet;\n      })\n\n      this.setState({pets})\n    })\n  }\n\n  editPet = (event) => {\n    event.preventDefault();\n\n    let name = event.target.getAttribute('data-name');\n    let type = event.target.getAttribute('data-type');\n\n    this.setState({\n      edit_id : event.target.getAttribute('data-id')\n    }, function(){\n\n      let form = document.querySelector('#editForm');\n\n      form.children[0].value = name;\n      form.children[1].value = type;\n\n    })\n\n\n  }\n\n  componentDidMount() {\n    return fetch(\"http://localhost:3001/pets\")\n    .then((res) => res.json())\n      .then(resultingJSON => this.setState({pets : resultingJSON}))\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header>\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <p>\n            Edit <code>src/App.js</code> and save to reload. {this.state.edit_id}\n          </p>\n\n          <h1>{ this.state.name }</h1>\n\n          <form onSubmit={this.createPet}>\n            <input type=\"text\" name=\"pet\" placeholder=\"put in a pet name\" />\n            <input type=\"text\" name=\"type\" placeholder=\"put in a type\" />\n\n            <button>make pet</button>\n          </form>\n\n          \n          {(this.state.edit_id != \"\") && <form id=\"editForm\" onSubmit={this.updatePet}>\n            <input type=\"text\" name=\"pet\" placeholder=\"put in a pet name\" />\n            <input type=\"text\" name=\"type\" placeholder=\"put in a type\" />\n\n            <button>update pet</button>\n          </form>}\n\n          {this.state.pets.map((x) =>\n            <p key={x._id}> \n              {x.name} | {x.type} <button onClick={this.deletePet} data-id={x._id}>x</button> \n              | <a onClick={this.editPet} href=\"#\" data-id={x._id} data-name={x.name} data-type={x.type}>edit</a>\n            </p>\n          )}\n\n          <a\n            className=\"App-link\"\n            href=\"https://reactjs.org\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Learn React\n          </a>\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}